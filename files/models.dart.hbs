// ignore_for_file: camel_case_types, non_constant_identifier_names

import 'package:json_annotation/json_annotation.dart';
import './interface.dart';

part 'models.g.dart';

{{#each operations}}
{{#if (isAnyTrue hasInput hasInternalInput (isNotEmpty inputSchema.definitions) hasInjectedInput (isNotEmpty responseSchema))}}
	{{#if (isNotEmpty inputSchema)}}
    {{#if hasInput}}
      {{~> struct_definition extends="BaseInput" requiredKeys=inputSchema.required schemaData=inputSchema.properties parentName=(fmtSprintf '%sInput' name)}}
    {{/if}}
    {{#each inputSchema.definitions as |schema name|~}}
      {{#if (isAbsent onceMap (fmtSprintf 'models_%s' name) schema)}}
        {{~> struct_definition requiredKeys=schema.required schemaData=schema.properties parentName=name}}
      {{/if}}
    {{/each}}
    {{~/if}}
    {{~#equal engine 0}}
      {{#if (isNotEmpty responseSchema)}}
        {{#with responseSchema.properties.data}}
          {{~> struct_definition requiredKeys=required schemaData=properties parentName=(fmtSprintf '%sResponseData' name)}}
        {{/with}}
      {{/if}}
    {{~/equal~}}
    {{~#each subSchemaMap as |schema name|~}}
      {{~> struct_recursion requiredKeys=schema.required schemaData=schema.schema parentName=name~}}
    {{~/each}}
    {{~#each subSchemaMap as |schema name|}}
      {{~> struct_definition requiredKeys=schema.required schemaData=schema.schema parentName=name}}
    {{/each}}
  {{/if}}
{{/each}}