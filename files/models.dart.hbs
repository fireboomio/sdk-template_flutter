// ignore_for_file: camel_case_types, non_constant_identifier_names

import 'package:json_annotation/json_annotation.dart';
import './interface.dart';

part 'models.g.dart';

{{#each objectFieldArray}}
{{#unless (equalAny root 'InternalInput')}}
@JsonSerializable()
class {{upperFirst (joinString '_' documentPath)}}{{#equal root 'Input'}} extends BaseInput{{/equal}} {
  {{#each fields}}
  {{> keywords_jsonkey name=name}}
  {{#if isArray}}List<{{/if}}{{~#if typeRefObject~}}
    {{~upperFirst (joinString '_' typeRefObject.documentPath)~}}
  {{~else~}}
    {{~#if typeRefEnum~}}
    {{~upperFirst typeRefEnum.name~}}
    {{~else~}}
    {{~#equal typeName 'string'}}String{{/equal~}}
    {{~#equal typeName 'integer'}}int{{/equal~}}
    {{~#equal typeName 'number'}}double{{/equal~}}
    {{~#equal typeName 'boolean'}}bool{{/equal~}}
    {{~#equal typeName ''}}dynamic{{/equal~}}
    {{~/if}}
  {{~/if}}{{#if isArray}}>{{~/if}}{{#unless (isAnyTrue (isAllTrue required (invertBool (equalAny root 'ResponseData'))))}}?{{/unless}} {{>keywords_name name=name}};
  {{/each}}
  {{upperFirst (joinString '_' documentPath)}}({{#if fields}}{
    {{#each fields}}
    {{#if (isAnyTrue (isAllTrue required (invertBool (equalAny root 'ResponseData'))))}}required {{/if}}this.{{>keywords_name name=name}},
    {{/each}}
  }{{/if}});

  factory {{upperFirst (joinString '_' documentPath)}}.fromJson(Map<String, dynamic> json) => _${{upperFirst (joinString '_' documentPath)}}FromJson(json);
  Map<String, dynamic> toJson() => _${{upperFirst (joinString '_' documentPath)}}ToJson(this);
}
{{/unless}}
{{/each}}

{{#each enumFieldArray}}
@JsonEnum(valueField: 'value')
enum {{upperFirst name}} {
  {{#each values}}
  {{upperFirst this}}("{{this}}"){{#if @last}};{{else}},{{/if}}
  {{/each}}

  final String value;
  const {{upperFirst name}}(this.value);
}
{{/each}}